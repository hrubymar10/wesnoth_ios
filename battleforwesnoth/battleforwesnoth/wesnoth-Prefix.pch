#pragma once

#ifdef __cplusplus

// Include any system framework and library headers here that should be included in all compilation units.
// You will also need to set the Prefix Header build setting of one or more of your targets to reference this file.

#include <algorithm>
#include <array>
#include <assert.h>
#include <atomic>
#include <bitset>
#include <cassert>
#include <cctype>
#include <cerrno>
#include <cfloat>
#include <chrono>
#include <ciso646>
#include <climits>
#include <clocale>
#include <cmath>
#include <csignal>
#include <cstddef>
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <ctype.h>
//#include <dbus/dbus.h>
#include <deque>
#include <dlfcn.h>
#include <errno.h>
#include <exception>
#include <fenv.h>
#include <float.h>
#include <fontconfig/fontconfig.h>
//#include <fribidi.h>
#include <fstream>
#include <functional>
#include <gettext.hpp>
//#include <gnu-crypt.h>
//#include <gui/auxiliary/typed_formula.hpp>
//#include <gui/core/layout_exception.hpp>
//#include <gui/core/register_widget.hpp>
//#include <gui/core/widget_definition.hpp>
//#include <gui/core/window_builder.hpp>
//#include <gui/widgets/container_base.hpp>
//#include <gui/widgets/generator.hpp>
//#include <gui/widgets/helper.hpp>
//#include <gui/widgets/settings.hpp>
#include <iomanip>
#include <ios>
#include <iosfwd>
#include <iostream>
#include <istream>
#include <iterator>
//#include <key.hpp>
#include <limits.h>
#include <limits>
#include <list>
#include <locale.h>
#include <locale>
#include <map>
#include <math.h>
#include <memory>
#include <mutex>
//#include <mysql/mysql.h>
#include <new>
#include <numeric>

// not on iOS
//#include <openssl/crypto.h>
//#include <openssl/md5.h>
//#include <openssl/opensslv.h>
//#include <openssl/rc4.h>
//#include <openssl/sha.h>

#include <ostream>
//#include <ow-crypt.h>
#include <png.h>
//#include <process.h>
#include <pthread.h>
#include <pwd.h>
#include <queue>
#include <random>
//#include <readline/history.h>
//#include <serialization/unicode.hpp>
#include <set>
#include <setjmp.h>
//#include <shellapi.h>
//#include <shlobj.h>
//#include <shlwapi.h>
#include <signal.h>
#include <sstream>
#include <stack>
#include <stdarg.h>
#include <stddef.h>
#include <stdexcept>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <string>
//#include <sys/sendfile.h>
#include <sys/stat.h>
#include <sys/sysctl.h>
#include <sys/time.h>
#include <sys/times.h>
#include <sys/types.h>
#include <sys/utsname.h>
#include <sys/wait.h>
#include <time.h>
#include <tuple>
#include <type_traits>
#include <typeinfo>
#include <unistd.h>
#include <unordered_map>
#include <unordered_set>
#include <utility>
#include <vector>

#include <CoreFoundation/CoreFoundation.h>

#include <cairo-features.h>

#include <pango/pango-layout.h>
#include <pango/pango.h>
#include <pango/pangocairo.h>

#include <boost/algorithm/string.hpp>
#include <boost/algorithm/string/join.hpp>
#include <boost/algorithm/string/predicate.hpp>
#include <boost/algorithm/string/replace.hpp>
#include <boost/any.hpp>
#include <boost/asio.hpp>
#include <boost/asio/signal_set.hpp>
#include <boost/asio/steady_timer.hpp>
#include <boost/assign.hpp>
#include <boost/bimap.hpp>
#include <boost/bimap/multiset_of.hpp>
#include <boost/bimap/set_of.hpp>
#include <boost/bind.hpp>
#include <boost/circular_buffer.hpp>
#include <boost/config.hpp>
#include <boost/date_time.hpp>
#include <boost/date_time/posix_time/posix_time_types.hpp>
#include <boost/detail/workaround.hpp>
#include <boost/dynamic_bitset.hpp>
#include <boost/dynamic_bitset_fwd.hpp>
#include <boost/exception/exception.hpp>
#include <boost/exception/get_error_info.hpp>
#include <boost/filesystem.hpp>
#include <boost/filesystem/fstream.hpp>
#include <boost/function_output_iterator.hpp>
#include <boost/functional/hash_fwd.hpp>
#include <boost/fusion/adapted/struct/adapt_struct.hpp>
#include <boost/fusion/include/adapt_struct.hpp>
#include <boost/fusion/include/define_struct.hpp>
#include <boost/fusion/include/std_pair.hpp>
#include <boost/generator_iterator.hpp>
#include <boost/intrusive_ptr.hpp>
#include <boost/iostreams/categories.hpp>
#include <boost/iostreams/copy.hpp>
#include <boost/iostreams/device/file_descriptor.hpp>
#include <boost/iostreams/filter/bzip2.hpp>
#include <boost/iostreams/filter/counter.hpp>
#include <boost/iostreams/filter/gzip.hpp>
#include <boost/iostreams/filtering_stream.hpp>
#include <boost/iostreams/stream.hpp>
#include <boost/is_placeholder.hpp>
#include <boost/iterator/indirect_iterator.hpp>
#include <boost/locale.hpp>
#include <boost/logic/tribool.hpp>
#include <boost/math/common_factor_rt.hpp>
#include <boost/math/constants/constants.hpp>
#include <boost/mpl/and.hpp>
#include <boost/mpl/back_inserter.hpp>
#include <boost/mpl/contains.hpp>
#include <boost/mpl/copy.hpp>
#include <boost/mpl/for_each.hpp>
#include <boost/mpl/has_xxx.hpp>
#include <boost/mpl/int.hpp>
#include <boost/mpl/not.hpp>
#include <boost/mpl/set.hpp>
#include <boost/mpl/vector.hpp>
#include <boost/multi_array.hpp>
#include <boost/multi_index/hashed_index.hpp>
#include <boost/multi_index/mem_fun.hpp>
#include <boost/multi_index/member.hpp>
#include <boost/multi_index/ordered_index.hpp>
#include <boost/multi_index/random_access_index.hpp>
#include <boost/multi_index_container.hpp>
#include <boost/nondet_random.hpp>
#include <boost/optional.hpp>
#include <boost/optional/optional.hpp>
#include <boost/preprocessor.hpp>
#include <boost/preprocessor/cat.hpp>
#include <boost/preprocessor/seq/for_each.hpp>
#include <boost/program_options/cmdline.hpp>
#include <boost/program_options/errors.hpp>
#include <boost/program_options/options_description.hpp>
#include <boost/program_options/parsers.hpp>
#include <boost/program_options/positional_options.hpp>
#include <boost/program_options/value_semantic.hpp>
#include <boost/program_options/variables_map.hpp>
#include <boost/ptr_container/ptr_vector.hpp>
#include <boost/random.hpp>
#include <boost/random/random_device.hpp>
#include <boost/range/adaptor/reversed.hpp>
#include <boost/range/adaptor/transformed.hpp>
#include <boost/range/adaptors.hpp>
#include <boost/range/algorithm.hpp>
#include <boost/range/algorithm/copy.hpp>
#include <boost/range/algorithm/find_if.hpp>
#include <boost/range/iterator_range.hpp>
#include <boost/regex.hpp>
#include <boost/scope_exit.hpp>
#include <boost/shared_array.hpp>
#include <boost/spirit/include/phoenix_core.hpp>
#include <boost/spirit/include/phoenix_operator.hpp>
#include <boost/spirit/include/qi.hpp>
#include <boost/spirit/include/support_line_pos_iterator.hpp>
#include <boost/swap.hpp>
#include <boost/system/error_code.hpp>
#include <boost/system/windows_error.hpp>
#include <boost/thread.hpp>
#include <boost/throw_exception.hpp>
#include <boost/unordered_map.hpp>
#include <boost/utility/string_ref.hpp>
//#include <boost/utility/string_view.hpp>
#include <boost/variant.hpp>
#include <boost/variant/apply_visitor.hpp>
#include <boost/variant/get.hpp>
#include <boost/variant/recursive_wrapper.hpp>
#include <boost/variant/static_visitor.hpp>
#include <boost/variant/variant.hpp>
#include <boost/version.hpp>

#include <CommonCrypto/CommonCryptor.h>
#include <CommonCrypto/CommonDigest.h>

#include <spirit_po/catalog.hpp>
#include <spirit_po/catalog_metadata.hpp>
#include <spirit_po/default_plural_forms_compiler.hpp>
#include <spirit_po/default_plural_forms_expressions.hpp>
#include <spirit_po/exceptions.hpp>
#include <spirit_po/po_grammar.hpp>
#include <spirit_po/po_message.hpp>
#include <spirit_po/po_message_adapted.hpp>
#include <spirit_po/version.hpp>

#include <SDL.h>
#include <SDL_clipboard.h>
#include <SDL_error.h>
#include <SDL_events.h>
#include <SDL_filesystem.h>
#include <SDL_image.h>
#include <SDL_keycode.h>
#include <SDL_mixer.h>
#include <SDL_mouse.h>
#include <SDL_mutex.h>
#include <SDL_rect.h>
#include <SDL_render.h>
#include <SDL_rwops.h>
#include <SDL_syswm.h>
#include <SDL_timer.h>
#include <SDL_ttf.h>
#include <SDL_types.h>
#include <SDL_video.h>


#endif // ifdef __cplusplus
